{"version":3,"file":"component---src-pages-newsroom-all-document-index-tsx-2ed579593fa17c73e12c.js","mappings":"sKAwBA,IAdwD,SAAC,GAKlD,IAJLA,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,cAEA,OACEC,EAAAA,cAAAA,MAAAA,CAAKH,UAAWI,IAAW,0BAA2BJ,IACpDG,EAAAA,cAAAA,KAAAA,CAAIH,UAAWI,IAAW,YAAaF,IAAiBH,GACxDI,EAAAA,cAAAA,MAAAA,CAAKH,UAAWI,IAAW,mBAAoBH,KATrD,C,oFCqDA,UAtDgE,SAAC,GAAa,IAAXI,EAAW,EAAXA,KACzDC,GAAMC,EAAAA,EAAAA,kBAAND,EAUAE,EAAoBH,EAApBG,gBAQR,OACEL,EAAAA,cAACM,EAAAA,EAAD,KACEN,EAAAA,cAAAA,UAAAA,CAASH,UAAU,yEAQjBG,EAAAA,cAACO,EAAAA,EAAD,CACEX,MAAOO,EAAE,kDACTJ,cAAc,WACdD,mBAAmB,mBAErBE,EAAAA,cAAAA,MAAAA,CAAKH,UAAU,6CACZQ,EAAgBG,MAAMC,KAAI,WAAWC,GAAQ,MAAhBC,EAAgB,EAAhBA,KACpBf,EAAiCe,EAAjCf,MAAOgB,EAA0BD,EAA1BC,UAAWC,EAAeF,EAAfE,IAAKC,EAAUH,EAAVG,MAC/B,OACEd,EAAAA,cAACe,EAAAA,GAAD,CACEL,IAAKA,EACLd,MAAOA,EACPC,UAAU,oDACVmB,WAAYF,SAAF,UAAEA,EAAOG,uBAAT,aAAEC,EAAwBC,gBACpCP,UAAWA,EACXQ,OAAQP,GATb,MAnCX,C","sources":["webpack://tonghuaholding-website/./src/components/UnderlineHeader/index.tsx","webpack://tonghuaholding-website/./src/pages/newsroom/all-document/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype UnderlineHeaderProps = {\n  title: string;\n  className?: string;\n  underlineClassName?: string;\n  textClassName?: string;\n};\n\nconst UnderlineHeader: React.FC<UnderlineHeaderProps> = ({\n  title,\n  className,\n  underlineClassName,\n  textClassName,\n}) => {\n  return (\n    <div className={classNames('flex flex-col space-y-2', className)}>\n      <h2 className={classNames('font-bold', textClassName)}>{title}</h2>\n      <div className={classNames('h-0.5 rounded-md', underlineClassName)} />\n    </div>\n  );\n};\n\nexport default UnderlineHeader;\n","import React from 'react';\nimport UnderlineHeader from '@/components/UnderlineHeader';\nimport { graphql, PageProps } from 'gatsby';\nimport { DocumentCard } from '@/components/cards';\nimport MainLayout from '@/layouts/MainLayout';\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\n\ntype NewsRoomAllDocumentProps = PageProps<GatsbyTypes.NewsRoomAllDocumentQuery>;\n\nconst NewsRoomAllDocument: React.FC<NewsRoomAllDocumentProps> = ({ data }) => {\n  const { t } = useTranslation();\n  // const newsType: ListProps[] = [\n  //   {\n  //     title: 'เอกสารเผยแพร่ทั้งหมด',\n  //     value: 0,\n  //   },\n  // ];\n\n  // const [selected, setSelected] = useState<ListProps>(newsType[0]);\n\n  const { allDocumentJson } = data;\n\n  // const handleSelected = (value: ListProps['value']) => {\n  //   if (typeof value === 'number') {\n  //     setSelected(newsType[value]);\n  //   }\n  // };\n\n  return (\n    <MainLayout>\n      <section className=\"px-4 pt-10 pb-20 lg:pb-28 md:px-6 lg:px-16 lg:py-20 max-w-7xl mx-auto\">\n        {/* <ListBox\n        className=\"w-full md:max-w-xs md:ml-auto\"\n        list={newsType}\n        selected={selected}\n        onSelected={(value) => handleSelected(value)}\n      /> */}\n        {/* เอกสารเผยแพร่ทั้งหมด */}\n        <UnderlineHeader\n          title={t('Pages.NewsRoom.AllDocumentPage.Section-1.Title')}\n          textClassName=\"text-2xl\"\n          underlineClassName=\"bg-neutral-900\"\n        />\n        <div className=\"flex flex-wrap mt-10 md:mt-4 md:space-y-0\">\n          {allDocumentJson.edges.map(({ node }, key) => {\n            const { title, createdAt, pdf, cover } = node;\n            return (\n              <DocumentCard\n                key={key}\n                title={title}\n                className=\"w-1/2 md:w-1/4 px-2 py-4 lg:px-4 text-neutral-900\"\n                coverImage={cover?.childImageSharp?.gatsbyImageData}\n                createdAt={createdAt}\n                toFile={pdf}\n              />\n            );\n          })}\n        </div>\n      </section>\n    </MainLayout>\n  );\n};\n\nexport default NewsRoomAllDocument;\n\nexport const query = graphql`\n  query NewsRoomAllDocument($language: String!) {\n    allDocumentJson(sort: { fields: createdAt, order: DESC }) {\n      edges {\n        node {\n          createdAt\n          title\n          pdf\n          cover {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n    locales: allLocale(\n      filter: { language: { eq: $language }, ns: { eq: \"translation\" } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["title","className","underlineClassName","textClassName","React","classNames","data","t","useTranslation","allDocumentJson","MainLayout","UnderlineHeader","edges","map","key","node","createdAt","pdf","cover","DocumentCard","coverImage","childImageSharp","_cover$childImageShar","gatsbyImageData","toFile"],"sourceRoot":""}