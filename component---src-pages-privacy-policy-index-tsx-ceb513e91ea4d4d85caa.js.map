{"version":3,"file":"component---src-pages-privacy-policy-index-tsx-ceb513e91ea4d4d85caa.js","mappings":"uKA8GA,IA3FA,YAMc,IAAD,IALXA,YAAAA,OAKW,MALG,GAKH,MAJXC,KAAAA,OAIW,MAJJ,KAII,MAHXC,KAAAA,OAGW,MAHJ,GAGI,EAFXC,EAEW,EAFXA,MACAC,EACW,EADXA,MAEQC,GAASC,EAAAA,EAAAA,gBAAc,cAAvBD,KAiBR,GAMIA,aAAAA,EAAAA,EAAME,eAAgB,CAAC,EALZC,EADf,EACER,YACOS,EAFT,EAEEL,MACAM,EAHF,EAGEA,QACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,iBAGMC,GAAeR,GAAQ,CAAC,GAAxBQ,WAEFC,EAAkBd,GAAeQ,EACjCO,EAAeN,EACfO,EAAS,GAAMN,GAAUP,GAAK,GAAOU,EAAaD,GAExD,OACEK,EAAAA,cAACC,EAAAA,OAAD,CACEC,eAAgB,CACdlB,KAAAA,GAEFG,MAAOA,EACPgB,cAAeL,EAAY,QAAWA,OAAiBM,EACvDnB,KAAM,CACJ,CACEoB,KAAK,cACLC,QAAST,GAEX,CACEU,SAAS,WACTD,QAASnB,GAEX,CACEoB,SAAS,iBACTD,QAAST,GAEX,CACEU,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASP,GAEX,CACEM,KAAK,eACLC,QAAQ,uBAEV,CACED,KAAK,kBACLC,QAASZ,GAEX,CACEW,KAAK,gBACLC,QAASnB,GAEX,CACEkB,KAAK,sBACLC,QAAST,GAEX,CACEQ,KAAK,gBACLC,QAASP,IAEXS,OAAOvB,IAKf,C,gECvFA,UAhBoD,SAAC,GAAa,IACxDwB,GADwD,EAAXC,KAC/BC,gBAAkB,CAAC,GAAjCF,KAER,OACET,EAAAA,cAACY,EAAAA,EAAD,KACEZ,EAAAA,cAACa,EAAAA,EAAD,CAAK1B,MAAM,mBACXa,EAAAA,cAAAA,UAAAA,CAASc,UAAU,0DACjBd,EAAAA,cAAAA,MAAAA,CACEe,wBAAyB,CAAEC,OAAQP,GAAQ,WAC3CK,UAAU,oBATpB,C","sources":["webpack://tonghuaholding-website/./src/components/Seo/index.tsx","webpack://tonghuaholding-website/./src/pages/privacy-policy/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ntype SeoProps = {\n  description?: string;\n  lang?: string;\n  meta?: Array<{ name: string; content: string }>;\n  image?: string;\n  title: string;\n};\n\nfunction Seo({\n  description = '',\n  lang = 'en',\n  meta = [],\n  image,\n  title,\n}: SeoProps) {\n  const { site } = useStaticQuery<GatsbyTypes.SeoQuery>(\n    graphql`\n      query Seo {\n        site {\n          pathPrefix\n          siteMetadata {\n            title\n            description\n            twitter\n            defaultMetaImage\n            siteUrl\n          }\n        }\n      }\n    `,\n  );\n\n  const {\n    description: siteDescription,\n    title: siteTitle,\n    siteUrl,\n    twitter,\n    defaultMetaImage,\n  } = site?.siteMetadata || {};\n\n  const { pathPrefix } = site || {};\n\n  const metaDescription = description || siteDescription;\n  const defaultTitle = siteTitle;\n  const metaImage = `${siteUrl}${image || `${pathPrefix}${defaultMetaImage}`}`;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: metaImage,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `twitter:image`,\n          content: metaImage,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nexport default Seo;\n","import { graphql, PageProps } from 'gatsby';\nimport MainLayout from '@/layouts/MainLayout';\nimport React from 'react';\nimport Seo from '@/components/Seo';\n\ntype PrivacyPolicyProps = PageProps<GatsbyTypes.PrivacyPolicyPageQuery>;\n\nconst PrivacyPolicy: React.FC<PrivacyPolicyProps> = ({ data }) => {\n  const { html } = data.markdownRemark || {};\n\n  return (\n    <MainLayout>\n      <Seo title=\"Privacy Policy\" />\n      <section className=\"px-4 md:px-6 lg:px-16 py-10 lg:py-20 max-w-4xl mx-auto\">\n        <div\n          dangerouslySetInnerHTML={{ __html: html || '<div />' }}\n          className=\"mt-10 markdown\"\n        />\n      </section>\n    </MainLayout>\n  );\n};\n\nexport default PrivacyPolicy;\n\nexport const query = graphql`\n  query PrivacyPolicyPage($language: String!) {\n    markdownRemark(frontmatter: { slug: { eq: \"privacy-policy\" } }) {\n      html\n    }\n\n    locales: allLocale(\n      filter: { language: { eq: $language }, ns: { eq: \"translation\" } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["description","lang","meta","image","title","site","useStaticQuery","siteMetadata","siteDescription","siteTitle","siteUrl","twitter","defaultMetaImage","pathPrefix","metaDescription","defaultTitle","metaImage","React","Helmet","htmlAttributes","titleTemplate","undefined","name","content","property","concat","html","data","markdownRemark","MainLayout","Seo","className","dangerouslySetInnerHTML","__html"],"sourceRoot":""}